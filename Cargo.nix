
# Generated by crate2nix 0.7.0-alpha.4 with the command:
#   "generate"
# See https://github.com/kolloch/crate2nix for more info.

{ pkgs? import <nixpkgs> { config = {}; },
  lib? pkgs.lib,
  callPackage? pkgs.callPackage,
  stdenv? pkgs.stdenv,
  buildRustCrate? pkgs.buildRustCrate,
  fetchurl? pkgs.fetchurl,
  fetchCrate? pkgs.fetchCrate,
  defaultCrateOverrides? pkgs.defaultCrateOverrides,
  # The features to enable for the root_crate or the workspace_members.
  rootFeatures? ["default"]}:

rec {
  #
  # "public" attributes that we attempt to keep stable with new versions of crate2nix.
  #

  
  # Refer your crate build derivation by name here.
  # You can override the features with
  # workspaceMembers."${crateName}".build.override { features = [ "default" "feature1" ... ]; }.
  workspaceMembers = {
    "xidlehook" = rec {
      packageId = "xidlehook 0.8.1 (path+file:///home/user/Coding/Rust/xidlehook/xidlehook-daemon)";
      build = buildRustCrateWithFeatures {
        packageId = "xidlehook 0.8.1 (path+file:///home/user/Coding/Rust/xidlehook/xidlehook-daemon)";
        features = rootFeatures;
      };
      
      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = debugCrate { inherit packageId; };
    };
    "xidlehook-core" = rec {
      packageId = "xidlehook-core 0.1.0 (path+file:///home/user/Coding/Rust/xidlehook/xidlehook-core)";
      build = buildRustCrateWithFeatures {
        packageId = "xidlehook-core 0.1.0 (path+file:///home/user/Coding/Rust/xidlehook/xidlehook-core)";
        features = rootFeatures;
      };
      
      # Debug support which might change between releases.
      # File a bug if you depend on any for non-debug work!
      debug = debugCrate { inherit packageId; };
    };
  };
  workspace_members =
    builtins.trace
      "workspace_members is deprecated in crate2nix 0.4. Please use workspaceMembers instead."
      lib.mapAttrs (n: v: v.build) workspaceMembers;

  #
  # "private" attributes that may change in every new version of crate2nix.
  #

  # Build and dependency information for crates.
  # Many of the fields are passed one-to-one to buildRustCrate.
  #
  # Noteworthy:
  # * `crateBin = [{name = ","; path = ",";}];`: a hack to disable building the binary.
  # * `dependencies`/`buildDependencies`: similar to the corresponding fields for buildRustCrate.
  #   but with additional information which is used during dependency/feature resolution.
  # * `resolvedDependencies`: the selected default features reported by cargo - only included for debugging.

  crates = {
    "aho-corasick 0.7.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "aho-corasick";
        version = "0.7.6";
        edition = "2015";
        sha256 = "0b8dh20fhdc59dhhnfi89n2bi80a8zbagzd5c122hf1vv2amxysq";
        libName = "aho_corasick";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "memchr";
            packageId = "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "memchr/use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ansi_term";
        version = "0.11.0";
        edition = "2015";
        sha256 = "16wpvrghvd0353584i1idnsgm0r3vchg8fyrm0x8ayv1rgvbljgf";
        authors = [
          "ogham@bsago.me"
          "Ryan Scheel (Havvy) <ryan.havvy@gmail.com>"
          "Josh Triplett <josh@joshtriplett.org>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: (target."os" == "windows");
            features = [ "errhandlingapi" "consoleapi" "processenv" ];
          }
        ];
        features = {
        };
      };
    "async-macros 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "async-macros";
        version = "2.0.0";
        edition = "2018";
        sha256 = "1cndfwmbjhxxk44pkh03w3v3hx1a99ad2z75wyhqa80gx26mljk4";
        authors = [
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
        ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "pin-utils";
            packageId = "pin-utils 0.1.0-alpha.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "async-std 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "async-std";
        version = "1.2.0";
        edition = "2018";
        sha256 = "0vx4q7l8kd5s90xflzcdhir9xnmg05b0yd0jk4qrlrq0k32f6gji";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
          "Contributors to async-std"
        ];
        dependencies = [
          {
            name = "async-macros";
            packageId = "async-macros 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "async-task";
            packageId = "async-task 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "broadcaster";
            packageId = "broadcaster 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "default-channels" ];
          }
          {
            name = "crossbeam-channel";
            packageId = "crossbeam-channel 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "crossbeam-deque";
            packageId = "crossbeam-deque 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "futures-core";
            packageId = "futures-core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "futures-io";
            packageId = "futures-io 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "futures-timer";
            packageId = "futures-timer 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "kv-log-macro";
            packageId = "kv-log-macro 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "log";
            packageId = "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            features = [ "kv_unstable" ];
          }
          {
            name = "memchr";
            packageId = "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "mio";
            packageId = "mio 0.6.21 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "mio-uds";
            packageId = "mio-uds 0.6.7 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "num_cpus";
            packageId = "num_cpus 1.11.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "once_cell";
            packageId = "once_cell 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "pin-project-lite";
            packageId = "pin-project-lite 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "pin-utils";
            packageId = "pin-utils 0.1.0-alpha.4 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "slab";
            packageId = "slab 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        features = {
          "attributes" = [ "async-attributes" ];
          "default" = [ "std" "async-task" "crossbeam-channel" "crossbeam-deque" "futures-timer" "kv-log-macro" "log" "mio" "mio-uds" "num_cpus" "pin-project-lite" ];
          "docs" = [ "attributes" "unstable" ];
          "std" = [ "async-macros" "crossbeam-utils" "futures-core" "futures-io" "memchr" "once_cell" "pin-project-lite" "pin-utils" "slab" ];
          "unstable" = [ "default" "broadcaster" ];
        };
        resolvedDefaultFeatures = [ "async-macros" "async-task" "broadcaster" "crossbeam-channel" "crossbeam-deque" "crossbeam-utils" "default" "futures-core" "futures-io" "futures-timer" "kv-log-macro" "log" "memchr" "mio" "mio-uds" "num_cpus" "once_cell" "pin-project-lite" "pin-utils" "slab" "std" "unstable" ];
      };
    "async-task 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "async-task";
        version = "1.0.0";
        edition = "2018";
        sha256 = "1v8wi8jrxw8ayy93a4zjn96z1z6bh5f5j8llalr91i4wgf7xasyy";
        authors = [
          "Stjepan Glavina <stjepang@gmail.com>"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "atty 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "atty";
        version = "0.2.13";
        edition = "2015";
        sha256 = "140sswp1bwqwc4zk80bxkbnfb3g936hgrb77g9g0k1zcld3wc0qq";
        authors = [
          "softprops <d.tangren@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            target = features: target."unix";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: target."windows";
            features = [ "consoleapi" "processenv" "minwinbase" "minwindef" "winbase" ];
          }
        ];
        features = {
        };
      };
    "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "autocfg";
        version = "0.1.7";
        edition = "2015";
        sha256 = "1chwgimpx5z7xbag7krr9d8asxfqbh683qhgl9kn3hxk2l0djj8x";
        authors = [
          "Josh Stone <cuviper@gmail.com>"
        ];
        features = {
        };
      };
    "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "bitflags";
        version = "1.2.1";
        edition = "2015";
        sha256 = "14qnd5nq8p2almk79m4m8ydqhd413yaxsyjp5xd19g3mikzf47fg";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "broadcaster 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "broadcaster";
        version = "0.2.6";
        edition = "2018";
        sha256 = "1848lwapy955rs8kbiv87adj68vdlh6vlj8n4wq10vx541j49887";
        authors = [
          "leo60228 <iakornfeld@gmail.com>"
        ];
        dependencies = [
          {
            name = "futures-channel-preview";
            packageId = "futures-channel-preview 0.3.0-alpha.19 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            features = [ "sink" ];
          }
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview 0.3.0-alpha.19 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "futures-sink-preview";
            packageId = "futures-sink-preview 0.3.0-alpha.19 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "futures-util-preview";
            packageId = "futures-util-preview 0.3.0-alpha.19 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "sink" ];
          }
          {
            name = "parking_lot";
            packageId = "parking_lot 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "slab";
            packageId = "slab 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "default-channels" ];
          "default-channels" = [ "futures-channel-preview" ];
        };
        resolvedDefaultFeatures = [ "default-channels" "futures-channel-preview" ];
      };
    "cc 1.0.47 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cc";
        version = "1.0.47";
        edition = "2018";
        # Hack to suppress building binaries
        crateBin = [{name = ","; path = ",";}];
        sha256 = "1f08560cwbalni1fc2jcmh1dszl3rc31azvr45bgz8vhrs6hb1xa";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "parallel" = [ "num_cpus" "jobserver" ];
        };
      };
    "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cfg-if";
        version = "0.1.10";
        edition = "2018";
        sha256 = "08h80ihs74jcyp24cd75wwabygbbdgl05k6p5dmq8akbr78vv1a7";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins" ];
        };
      };
    "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "clap";
        version = "2.33.0";
        edition = "2015";
        sha256 = "1nf6ld3bims1n5vfzhkvcb55pdzh04bbhzf8nil5vvw05nxzarsh";
        authors = [
          "Kevin K. <kbknapp@gmail.com>"
        ];
        dependencies = [
          {
            name = "ansi_term";
            packageId = "ansi_term 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            target = features: (!target."windows");
          }
          {
            name = "atty";
            packageId = "atty 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "bitflags";
            packageId = "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "strsim";
            packageId = "strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "textwrap";
            packageId = "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "unicode-width";
            packageId = "unicode-width 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "vec_map";
            packageId = "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        features = {
          "color" = [ "ansi_term" "atty" ];
          "default" = [ "suggestions" "color" "vec_map" ];
          "doc" = [ "yaml" ];
          "lints" = [ "clippy" ];
          "suggestions" = [ "strsim" ];
          "wrap_help" = [ "term_size" "textwrap/term_size" ];
          "yaml" = [ "yaml-rust" ];
        };
        resolvedDefaultFeatures = [ "ansi_term" "atty" "color" "default" "strsim" "suggestions" "vec_map" ];
      };
    "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "cloudabi";
        version = "0.0.3";
        edition = "2015";
        sha256 = "0kxcg83jlihy0phnd2g8c2c303px3l2p3pkjz357ll6llnd5pz6x";
        libPath = "cloudabi.rs";
        authors = [
          "Nuxi (https://nuxi.nl/) and contributors"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        features = {
          "default" = [ "bitflags" ];
        };
        resolvedDefaultFeatures = [ "bitflags" "default" ];
      };
    "crossbeam-channel 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-channel";
        version = "0.4.0";
        edition = "2015";
        sha256 = "135ncx9680afs8jkjz8g3iq3naay9rn7942gxrdg2n9m1cxrmv5c";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "crossbeam-deque 0.7.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-deque";
        version = "0.7.2";
        edition = "2015";
        sha256 = "1jm3rqb3qfpfywrakyy81f61xnl4jsim7lam9digw6w6cdfr9an3";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "crossbeam-epoch";
            packageId = "crossbeam-epoch 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "crossbeam-epoch 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-epoch";
        version = "0.8.0";
        edition = "2015";
        sha256 = "1b2mgc2gxxvyzyxgd5wvn9k42gr6f9phi2swwjawpqswy3dynr2h";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "crossbeam-utils";
            packageId = "crossbeam-utils 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "memoffset";
            packageId = "memoffset 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "scopeguard";
            packageId = "scopeguard 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "alloc" = [ "crossbeam-utils/alloc" ];
          "default" = [ "std" ];
          "nightly" = [ "crossbeam-utils/nightly" ];
          "std" = [ "crossbeam-utils/std" "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
    "crossbeam-utils 0.6.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-utils";
        version = "0.6.6";
        edition = "2015";
        sha256 = "1rk0r9n04bmq4a3g2q5qhvvlmrmx780gc6h9lmc94mwndslkz5q4";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
    "crossbeam-utils 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "crossbeam-utils";
        version = "0.7.0";
        edition = "2015";
        sha256 = "1x1rn35q2v05qif14ijfg7800d3rf3ji2cg79awnacfw5jq6si6f";
        authors = [
          "The Crossbeam Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        buildDependencies = [
          {
            name = "autocfg";
            packageId = "autocfg 0.1.7 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "lazy_static" ];
        };
        resolvedDefaultFeatures = [ "default" "lazy_static" "std" ];
      };
    "env_logger 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "env_logger";
        version = "0.7.1";
        edition = "2018";
        sha256 = "0djx8h8xfib43g5w94r1m1mkky5spcw4wblzgnhiyg5vnfxknls4";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "atty";
            packageId = "atty 0.2.13 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "humantime";
            packageId = "humantime 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "log";
            packageId = "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "std" ];
          }
          {
            name = "regex";
            packageId = "regex 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "termcolor";
            packageId = "termcolor 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        features = {
          "default" = [ "termcolor" "atty" "humantime" "regex" ];
        };
        resolvedDefaultFeatures = [ "atty" "default" "humantime" "regex" "termcolor" ];
      };
    "fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fuchsia-zircon";
        version = "0.3.3";
        edition = "2015";
        sha256 = "10jxc5ks1x06gpd0xg51kcjrxr35nj6qhx2zlc5n7bmskv3675rf";
        authors = [
          "Raph Levien <raph@google.com>"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "fuchsia-zircon-sys";
            packageId = "fuchsia-zircon-sys 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "fuchsia-zircon-sys 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "fuchsia-zircon-sys";
        version = "0.3.3";
        edition = "2015";
        sha256 = "19zp2085qsyq2bh1gvcxq1lb8w6v6jj9kbdkhpdjrl95fypakjix";
        authors = [
          "Raph Levien <raph@google.com>"
        ];
        features = {
        };
      };
    "futures 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "futures";
        version = "0.3.1";
        edition = "2018";
        sha256 = "11srrbc0hp7pgz142qjfx2z07kfhc98rbfwqyrgm4mxvxib61wdn";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-channel";
            packageId = "futures-channel 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
          {
            name = "futures-core";
            packageId = "futures-core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-executor";
            packageId = "futures-executor 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
            features = [ "sink" ];
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" "futures-task/alloc" "futures-sink/alloc" "futures-channel/alloc" "futures-util/alloc" ];
          "async-await" = [ "futures-util/async-await" "futures-util/async-await-macro" ];
          "bilock" = [ "futures-util/bilock" ];
          "cfg-target-has-atomic" = [ "futures-core/cfg-target-has-atomic" "futures-task/cfg-target-has-atomic" "futures-channel/cfg-target-has-atomic" "futures-util/cfg-target-has-atomic" ];
          "compat" = [ "std" "futures-util/compat" ];
          "default" = [ "std" "async-await" "executor" ];
          "executor" = [ "std" "futures-executor/std" ];
          "io-compat" = [ "compat" "futures-util/io-compat" ];
          "read-initializer" = [ "futures-io/read-initializer" "futures-util/read-initializer" ];
          "std" = [ "alloc" "futures-core/std" "futures-task/std" "futures-io/std" "futures-sink/std" "futures-util/std" "futures-util/io" "futures-util/channel" ];
          "thread-pool" = [ "executor" "futures-executor/thread-pool" ];
          "unstable" = [ "futures-core/unstable" "futures-task/unstable" "futures-channel/unstable" "futures-io/unstable" "futures-util/unstable" ];
        };
        resolvedDefaultFeatures = [ "alloc" "async-await" "default" "executor" "futures-executor" "std" ];
      };
    "futures-channel 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "futures-channel";
        version = "0.3.1";
        edition = "2018";
        sha256 = "11lvk749n61654ad40xn751gmxzwb697nwh36s5gs0ni2z59ibpw";
        libName = "futures_channel";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" ];
          "cfg-target-has-atomic" = [ "futures-core/cfg-target-has-atomic" ];
          "default" = [ "std" ];
          "sink" = [ "futures-sink" ];
          "std" = [ "alloc" "futures-core/std" ];
          "unstable" = [ "futures-core/unstable" ];
        };
        resolvedDefaultFeatures = [ "alloc" "futures-sink" "sink" "std" ];
      };
    "futures-channel-preview 0.3.0-alpha.19 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "futures-channel-preview";
        version = "0.3.0-alpha.19";
        edition = "2018";
        sha256 = "0fi6bi4lpyxjigy11y5sjg6wlc8nc71vbpmxz31c3aagjvgz9rfm";
        libName = "futures_channel";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview 0.3.0-alpha.19 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink-preview";
            packageId = "futures-sink-preview 0.3.0-alpha.19 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "alloc" = [ "futures-core-preview/alloc" ];
          "cfg-target-has-atomic" = [ "futures-core-preview/cfg-target-has-atomic" ];
          "default" = [ "std" ];
          "sink" = [ "futures-sink-preview" ];
          "std" = [ "alloc" "futures-core-preview/std" ];
          "unstable" = [ "futures-core-preview/unstable" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "futures-sink-preview" "sink" "std" ];
      };
    "futures-core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "futures-core";
        version = "0.3.1";
        edition = "2018";
        sha256 = "0rh8q6pg08dizk5hwksvjgvkw26s3sr3b199nggv3ypyg914qmkr";
        libName = "futures_core";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
    "futures-core-preview 0.3.0-alpha.19 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "futures-core-preview";
        version = "0.3.0-alpha.19";
        edition = "2018";
        sha256 = "02n66jkjhpy210dv24pz0j30lvyin5kzlrb50p1j7x8yzdin4nxk";
        libName = "futures_core";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
    "futures-executor 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "futures-executor";
        version = "0.3.1";
        edition = "2018";
        sha256 = "0cf24wbgxqh4kdjbb557vk1axzmbpmwb8s05ga1nls1zaqv4f9qy";
        libName = "futures_executor";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core";
            packageId = "futures-core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-util";
            packageId = "futures-util 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "futures-core/std" "futures-task/std" "futures-util/std" ];
          "thread-pool" = [ "std" "num_cpus" ];
        };
        resolvedDefaultFeatures = [ "std" ];
      };
    "futures-io 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "futures-io";
        version = "0.3.1";
        edition = "2018";
        sha256 = "1zxm41fmkrb0r39ajk3rr9invcd5bdwlafazn8m9aw4y49ymfxp6";
        libName = "futures_io";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "futures-macro 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "futures-macro";
        version = "0.3.1";
        edition = "2018";
        sha256 = "0r3px32wgqfbmfyb1lrj9wplvjris5magdyhfr7xnyjk2mncbrsj";
        procMacro = true;
        libName = "futures_macro";
        authors = [
          "Taylor Cramer <cramertj@google.com>"
          "Taiki Endo <te316e89@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack 0.5.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "syn";
            packageId = "syn 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "full" ];
          }
        ];
        features = {
        };
      };
    "futures-sink 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "futures-sink";
        version = "0.3.1";
        edition = "2018";
        sha256 = "05iwskzxq3yqvxv9l1kqnd7kkmp0dwc39fnvwrcjsg76z8zf66qp";
        libName = "futures_sink";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
    "futures-sink-preview 0.3.0-alpha.19 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "futures-sink-preview";
        version = "0.3.0-alpha.19";
        edition = "2018";
        sha256 = "1v7y5qvgvl0d6hd9s4k7bd5qrj2gdlrs5yfl22v5pxv9dgpliwc6";
        libName = "futures_sink";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "std" ];
      };
    "futures-task 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "futures-task";
        version = "0.3.1";
        edition = "2018";
        sha256 = "1yg5d7b3z58mhqbrax5a0qdsfvzfclwyqvw5k3i41x4wnbb55bhb";
        libName = "futures_task";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
          "default" = [ "std" ];
          "std" = [ "alloc" ];
        };
        resolvedDefaultFeatures = [ "alloc" "std" ];
      };
    "futures-timer 2.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "futures-timer";
        version = "2.0.2";
        edition = "2018";
        sha256 = "1xlx22asam8g5m32avwxx4x4p5hw3gvdhbk6047rn0hqn847bpm1";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "futures-util 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "futures-util";
        version = "0.3.1";
        edition = "2018";
        sha256 = "0xlyqdn6lnpkw27lwxczihx91h64gbdd31n8c8y5v63nzds65mn0";
        libName = "futures_util";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-channel";
            packageId = "futures-channel 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-core";
            packageId = "futures-core 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-io";
            packageId = "futures-io 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "std" ];
          }
          {
            name = "futures-macro";
            packageId = "futures-macro 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink";
            packageId = "futures-sink 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "futures-task";
            packageId = "futures-task 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "memchr";
            packageId = "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "pin-utils";
            packageId = "pin-utils 0.1.0-alpha.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "proc-macro-hack";
            packageId = "proc-macro-hack 0.5.11 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "proc-macro-nested";
            packageId = "proc-macro-nested 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "slab";
            packageId = "slab 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        features = {
          "alloc" = [ "futures-core/alloc" "futures-task/alloc" ];
          "async-await-macro" = [ "async-await" "futures-macro" "proc-macro-hack" "proc-macro-nested" ];
          "cfg-target-has-atomic" = [ "futures-core/cfg-target-has-atomic" "futures-task/cfg-target-has-atomic" ];
          "channel" = [ "std" "futures-channel" ];
          "compat" = [ "std" "futures_01" ];
          "default" = [ "std" "async-await" "async-await-macro" ];
          "io" = [ "std" "futures-io" "memchr" ];
          "io-compat" = [ "io" "compat" "tokio-io" ];
          "read-initializer" = [ "io" "futures-io/read-initializer" "futures-io/unstable" ];
          "sink" = [ "futures-sink" ];
          "std" = [ "alloc" "futures-core/std" "futures-task/std" "slab" ];
          "unstable" = [ "futures-core/unstable" "futures-task/unstable" ];
        };
        resolvedDefaultFeatures = [ "alloc" "async-await" "async-await-macro" "channel" "futures-channel" "futures-io" "futures-macro" "futures-sink" "io" "memchr" "proc-macro-hack" "proc-macro-nested" "sink" "slab" "std" ];
      };
    "futures-util-preview 0.3.0-alpha.19 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "futures-util-preview";
        version = "0.3.0-alpha.19";
        edition = "2018";
        sha256 = "138f8wy0vqy2gsgk28kldbqnrdcgwfv9f9xx6rwzkr8p7iinisaw";
        libName = "futures_util";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "futures-core-preview";
            packageId = "futures-core-preview 0.3.0-alpha.19 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "futures-sink-preview";
            packageId = "futures-sink-preview 0.3.0-alpha.19 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "pin-utils";
            packageId = "pin-utils 0.1.0-alpha.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "slab";
            packageId = "slab 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        features = {
          "alloc" = [ "futures-core-preview/alloc" ];
          "cfg-target-has-atomic" = [ "futures-core-preview/cfg-target-has-atomic" ];
          "channel" = [ "std" "futures-channel-preview" ];
          "compat" = [ "std" "futures_01" ];
          "default" = [ "std" ];
          "io" = [ "std" "futures-io-preview" "memchr" ];
          "io-compat" = [ "io" "compat" "tokio-io" ];
          "join-macro" = [ "async-await" "futures-join-macro-preview" "proc-macro-hack" "proc-macro-nested" ];
          "read_initializer" = [ "io" "futures-io-preview/read_initializer" "futures-io-preview/unstable" ];
          "select-macro" = [ "async-await" "futures-select-macro-preview" "proc-macro-hack" "proc-macro-nested" ];
          "sink" = [ "futures-sink-preview" ];
          "std" = [ "alloc" "futures-core-preview/std" "slab" ];
          "unstable" = [ "futures-core-preview/unstable" ];
        };
        resolvedDefaultFeatures = [ "alloc" "default" "futures-sink-preview" "sink" "slab" "std" ];
      };
    "heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "heck";
        version = "0.3.1";
        edition = "2015";
        sha256 = "01a2v7yvkiqxakdqz4hw3w3g4sm52ivz9cs3qcsv2arxsmw4wmi0";
        authors = [
          "Without Boats <woboats@gmail.com>"
        ];
        dependencies = [
          {
            name = "unicode-segmentation";
            packageId = "unicode-segmentation 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "hermit-abi 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "hermit-abi";
        version = "0.1.3";
        edition = "2015";
        sha256 = "087ibb7v4dxhx1h66jjffk4zrjlhy3n4fr0x9d9y6f3zjfgkqz1h";
        authors = [
          "Stefan Lankes"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "rustc-dep-of-std" = [ "core" "compiler_builtins/rustc-dep-of-std" "libc/rustc-dep-of-std" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "humantime 1.3.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "humantime";
        version = "1.3.0";
        edition = "2015";
        sha256 = "0krwgbf35pd46xvkqg14j070vircsndabahahlv3rwhflpy4q06z";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
        ];
        dependencies = [
          {
            name = "quick-error";
            packageId = "quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "iovec 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "iovec";
        version = "0.1.4";
        edition = "2015";
        sha256 = "0ph73qygwx8i0mblrf110cj59l00gkmsgrpzz1rm85syz5pymcxj";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: target."unix";
          }
        ];
        features = {
        };
      };
    "itoa 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "itoa";
        version = "0.4.4";
        edition = "2015";
        sha256 = "0zvg2d9qv3avhf3d8ggglh6fdyw8kkwqg3r4622ly5yhxnvnc4jh";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "kernel32-sys";
        version = "0.2.2";
        edition = "2015";
        sha256 = "1389av0601a9yz8dvx5zha9vmkd6ik7ax0idpb032d28555n41vm";
        libName = "kernel32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "kv-log-macro 1.0.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "kv-log-macro";
        version = "1.0.4";
        edition = "2018";
        sha256 = "1fxar5mvl8gf19phy86b915n2yhs11z23p7bwr9afc6mcpsdjm4c";
        authors = [
          "Yoshua Wuyts <yoshuawuyts@gmail.com>"
        ];
        dependencies = [
          {
            name = "log";
            packageId = "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "kv_unstable" ];
          }
        ];
        features = {
        };
      };
    "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lazy_static";
        version = "1.4.0";
        edition = "2015";
        sha256 = "0in6ikhw8mgl33wjv6q6xfrb5b9jr16q8ygjy803fay4zcisvaz2";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        features = {
          "spin_no_std" = [ "spin" ];
        };
      };
    "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libc";
        version = "0.2.66";
        edition = "2015";
        sha256 = "0n0mwry21fxfwc063k33mvxk8xj7ia5ar8m42c9ymbam2ksb25fm";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "std" ];
          "rustc-dep-of-std" = [ "align" "rustc-std-workspace-core" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "extra_traits" "std" ];
      };
    "libpulse-binding 2.14.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libpulse-binding";
        version = "2.14.0";
        edition = "2018";
        sha256 = "0nwnhqvixksv72yf44b949966fq52j48r7991xfv83chsrssz1nf";
        authors = [
          "Lyndon Brown <jnqnfe@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "libpulse-sys";
            packageId = "libpulse-sys 1.11.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "pa_latest_common" ];
          "dox" = [ "libpulse-sys/dox" ];
          "latest_pa_common_compatibility" = [ "pa_latest_common" ];
          "latest_pa_compatibility" = [ "pa_latest" ];
          "pa_latest" = [ "pa_v13" ];
          "pa_latest_common" = [ "pa_v12" ];
          "pa_v12" = [ "pa_v8" "libpulse-sys/pa_v12" ];
          "pa_v12_compatibility" = [ "pa_v12" ];
          "pa_v13" = [ "pa_v12" "libpulse-sys/pa_v13" ];
          "pa_v5" = [ "libpulse-sys/pa_v5" ];
          "pa_v6" = [ "pa_v5" "libpulse-sys/pa_v6" ];
          "pa_v8" = [ "pa_v6" "libpulse-sys/pa_v8" ];
        };
        resolvedDefaultFeatures = [ "pa_v12" "pa_v12_compatibility" "pa_v5" "pa_v6" "pa_v8" ];
      };
    "libpulse-sys 1.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "libpulse-sys";
        version = "1.11.0";
        edition = "2018";
        sha256 = "0ln7b8dq8ykqklpjl3nr66g342yzia8njxzs5w88mqp7ihrbj3hg";
        authors = [
          "Lyndon Brown <jnqnfe@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        buildDependencies = [
          {
            name = "pkg-config";
            packageId = "pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: (target."os" == "linux");
          }
        ];
        features = {
          "default" = [ "pa_latest_common" ];
          "latest_pa_common_compatibility" = [ "pa_latest_common" ];
          "latest_pa_compatibility" = [ "pa_latest" ];
          "pa_latest" = [ "pa_v13" ];
          "pa_latest_common" = [ "pa_v12" ];
          "pa_v12" = [ "pa_v8" ];
          "pa_v12_compatibility" = [ "pa_v12" ];
          "pa_v13" = [ "pa_v12" ];
          "pa_v6" = [ "pa_v5" ];
          "pa_v8" = [ "pa_v6" ];
        };
        resolvedDefaultFeatures = [ "pa_v12" "pa_v5" "pa_v6" "pa_v8" ];
      };
    "lock_api 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "lock_api";
        version = "0.3.2";
        edition = "2018";
        sha256 = "11nmqxlzjqr1h6zddsqwvf1w6z4mwb1gd5qjxkdn0asxfabkjyz5";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "scopeguard";
            packageId = "scopeguard 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
        };
      };
    "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "log";
        version = "0.4.8";
        edition = "2015";
        sha256 = "1xz18ixccl5c6np4linv3ypc7hpmmgpc5zzd2ymp2ssfx0mhbdhl";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "kv_unstable_sval" = [ "kv_unstable" "sval/fmt" ];
        };
        resolvedDefaultFeatures = [ "kv_unstable" "std" ];
      };
    "maybe-uninit 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "maybe-uninit";
        version = "2.0.0";
        edition = "2015";
        sha256 = "004y0nzmpfdrhz251278341z6ql34iv1k6dp1h6af7d6nd6jwc30";
        authors = [
          "est31 <MTest31@outlook.com>"
          "The Rust Project Developers"
        ];
        features = {
        };
      };
    "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "memchr";
        version = "2.2.1";
        edition = "2015";
        sha256 = "13j6ji9x9ydpi9grbss106gqqr3xn3bcfp28aydqfa4751qrfmw8";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
        resolvedDefaultFeatures = [ "default" "use_std" ];
      };
    "memoffset 0.5.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "memoffset";
        version = "0.5.3";
        edition = "2015";
        sha256 = "1fblqzc25hfaym8m0pj112s66pqq87avvaqm5hp5rskib2w9w63m";
        authors = [
          "Gilad Naaman <gilad.naaman@gmail.com>"
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "mio 0.6.21 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "mio";
        version = "0.6.21";
        edition = "2015";
        sha256 = "13q02a7cwc140aygf8amadpzpl5lyj3p2r4wnvgydfpnphifqb9h";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "fuchsia-zircon";
            packageId = "fuchsia-zircon 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: (target."os" == "fuchsia");
          }
          {
            name = "fuchsia-zircon-sys";
            packageId = "fuchsia-zircon-sys 0.3.3 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: (target."os" == "fuchsia");
          }
          {
            name = "iovec";
            packageId = "iovec 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: target."windows";
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: target."unix";
          }
          {
            name = "log";
            packageId = "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "miow";
            packageId = "miow 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: target."windows";
          }
          {
            name = "net2";
            packageId = "net2 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "slab";
            packageId = "slab 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: target."windows";
          }
        ];
        features = {
          "default" = [ "with-deprecated" ];
        };
        resolvedDefaultFeatures = [ "default" "with-deprecated" ];
      };
    "mio-uds 0.6.7 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "mio-uds";
        version = "0.6.7";
        edition = "2015";
        sha256 = "09gimdbnj7b9yca99pk8lxh9jhl79msj795c8fxi2sqr9slmfqln";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "iovec";
            packageId = "iovec 0.1.4 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: target."unix";
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: target."unix";
          }
          {
            name = "mio";
            packageId = "mio 0.6.21 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: target."unix";
          }
        ];
        features = {
        };
      };
    "miow 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "miow";
        version = "0.2.1";
        edition = "2015";
        sha256 = "06g9b8sqlh5gxakwqq4rrib07afwanfnxgxajrldwcgk3hxjy7wc";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "kernel32-sys";
            packageId = "kernel32-sys 0.2.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "net2";
            packageId = "net2 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "winapi";
            packageId = "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "ws2_32-sys";
            packageId = "ws2_32-sys 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "net2 0.2.33 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "net2";
        version = "0.2.33";
        edition = "2015";
        sha256 = "126g3fgfxp06zimc1l9iyxnn9cif1hjsg7sd81nlls5nnyghsma2";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: ((target."os" == "redox") || target."unix");
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: target."windows";
            features = [ "handleapi" "winsock2" "ws2def" "ws2ipdef" "ws2tcpip" ];
          }
        ];
        features = {
          "default" = [ "duration" ];
        };
        resolvedDefaultFeatures = [ "default" "duration" ];
      };
    "nix 0.15.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "nix";
        version = "0.15.0";
        edition = "2015";
        sha256 = "0aa2l7wg9pzx24ks4p97gdy09a4hhs1sr9drxnm75v906d7hnbiv";
        authors = [
          "The nix-rust Project Developers"
        ];
        dependencies = [
          {
            name = "bitflags";
            packageId = "bitflags 1.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "extra_traits" ];
          }
          {
            name = "void";
            packageId = "void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        buildDependencies = [
          {
            name = "cc";
            packageId = "cc 1.0.47 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: (target."os" == "dragonfly");
          }
        ];
        features = {
        };
      };
    "num_cpus 1.11.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "num_cpus";
        version = "1.11.1";
        edition = "2015";
        sha256 = "0wlxs00cpg16z09fwchj1gdz1jxnf5dgg1cbidvq0sc75bnwbnkn";
        authors = [
          "Sean McArthur <sean@seanmonstar.com>"
        ];
        dependencies = [
          {
            name = "hermit-abi";
            packageId = "hermit-abi 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: (((target."arch" == "x86_64") || (target."arch" == "aarch64")) && (target."os" == "hermit"));
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "once_cell 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "once_cell";
        version = "1.2.0";
        edition = "2018";
        sha256 = "1vdz8xlg3r05w3wfjimnc347hgm54i5nrqf72r4mlp0fcdplh7w9";
        authors = [
          "Aleksey Kladov <aleksey.kladov@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "parking_lot 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "parking_lot";
        version = "0.9.0";
        edition = "2018";
        sha256 = "0lk2vq3hp88ygpgsrypdr3ss71fidnqbykva0csgxhmn5scb2hpq";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "lock_api";
            packageId = "lock_api 0.3.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "parking_lot_core";
            packageId = "parking_lot_core 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "deadlock_detection" = [ "parking_lot_core/deadlock_detection" ];
          "nightly" = [ "parking_lot_core/nightly" "lock_api/nightly" ];
          "owning_ref" = [ "lock_api/owning_ref" ];
          "serde" = [ "lock_api/serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "parking_lot_core 0.6.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "parking_lot_core";
        version = "0.6.2";
        edition = "2018";
        sha256 = "0ay67dpnrn68ryyvp720m9i8hzp189fd4d6slrs1lvmcwywv2xmq";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "cfg-if";
            packageId = "cfg-if 0.1.10 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "cloudabi";
            packageId = "cloudabi 0.0.3 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: (target."os" == "cloudabi");
          }
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: target."unix";
          }
          {
            name = "redox_syscall";
            packageId = "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: (target."os" == "redox");
          }
          {
            name = "smallvec";
            packageId = "smallvec 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: target."windows";
            features = [ "winnt" "ntstatus" "minwindef" "winerror" "winbase" "errhandlingapi" "handleapi" ];
          }
        ];
        buildDependencies = [
          {
            name = "rustc_version";
            packageId = "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "deadlock_detection" = [ "petgraph" "thread-id" "backtrace" ];
        };
      };
    "pin-project-lite 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "pin-project-lite";
        version = "0.1.1";
        edition = "2018";
        sha256 = "149rf3qk5gdvx5ryns3vw2cihr2bff6zn6gfja3cxqz6l2y6rbzh";
        authors = [
          "Taiki Endo <te316e89@gmail.com>"
        ];
        features = {
        };
      };
    "pin-utils 0.1.0-alpha.4 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "pin-utils";
        version = "0.1.0-alpha.4";
        edition = "2018";
        sha256 = "11xmyx00n4m37d546by2rxb8ryxs12v55cc172i3yak1rqccd52q";
        authors = [
          "Josef Brandl <mail@josefbrandl.de>"
        ];
        features = {
        };
      };
    "pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "pkg-config";
        version = "0.3.17";
        edition = "2015";
        sha256 = "0xynnaxdv0gzadlw4h79j855k0q7rj4zb9xb1vk00nc6ss559nh5";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        features = {
        };
      };
    "proc-macro-error 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro-error";
        version = "0.2.6";
        edition = "2018";
        sha256 = "15v0ghpanf8zzdbd76dxccfi5x706w3av8p4y3apb8cfbm6zxk5f";
        authors = [
          "CreepySkeleton <creepy-skeleton@yandex.ru>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "syn";
            packageId = "syn 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "proc-macro-hack 0.5.11 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro-hack";
        version = "0.5.11";
        edition = "2018";
        sha256 = "1idz5vmnjjhvr51yvwyjb45mza18wa53fr05m1skqvbdyw15gm7c";
        procMacro = true;
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "syn";
            packageId = "syn 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "proc-macro-nested 0.1.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro-nested";
        version = "0.1.3";
        edition = "2015";
        sha256 = "0bmlksm8vl44wkwihmwr7jsjznhbg0n7aibcw1cs2jgjcp86x6in";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
        };
      };
    "proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "proc-macro2";
        version = "1.0.6";
        edition = "2018";
        sha256 = "09rgb5ab0jgw39kyad0lgqs4nb9yaf7mwcrgxqnsxbn4il54g7lw";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
        ];
        dependencies = [
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "quick-error 1.2.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "quick-error";
        version = "1.2.2";
        edition = "2015";
        sha256 = "1w6kgwwv7p7zr0yyg5rb315lkk24bimywklwx7fsvsbwi10bjx4j";
        authors = [
          "Paul Colomiets <paul@colomiets.name>"
          "Colin Kiegel <kiegel@gmx.de>"
        ];
        features = {
        };
      };
    "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "quote";
        version = "1.0.2";
        edition = "2018";
        sha256 = "1zkc46ryacf2jdkc6krsy2z615xbk1x8kp1830rcxz3irj5qqfh5";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
        ];
        features = {
          "default" = [ "proc-macro" ];
          "proc-macro" = [ "proc-macro2/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "default" "proc-macro" ];
      };
    "redox_syscall 0.1.56 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "redox_syscall";
        version = "0.1.56";
        edition = "2015";
        sha256 = "110y7dyfm2vci4x5vk7gr0q551dvp31npl99fnsx2fb17wzwcf94";
        libName = "syscall";
        authors = [
          "Jeremy Soller <jackpot51@gmail.com>"
        ];
        features = {
        };
      };
    "regex 1.3.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "regex";
        version = "1.3.1";
        edition = "2015";
        sha256 = "1g8wp160vzxgralyd4imydd0xsxq6yh25zhs229z1s6w7g9hn8nw";
        authors = [
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "aho-corasick";
            packageId = "aho-corasick 0.7.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "memchr";
            packageId = "memchr 2.2.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "regex-syntax";
            packageId = "regex-syntax 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "thread_local";
            packageId = "thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" "perf" "unicode" ];
          "perf" = [ "perf-cache" "perf-dfa" "perf-inline" "perf-literal" ];
          "perf-cache" = [ "thread_local" ];
          "perf-literal" = [ "aho-corasick" "memchr" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
          "unicode-age" = [ "regex-syntax/unicode-age" ];
          "unicode-bool" = [ "regex-syntax/unicode-bool" ];
          "unicode-case" = [ "regex-syntax/unicode-case" ];
          "unicode-gencat" = [ "regex-syntax/unicode-gencat" ];
          "unicode-perl" = [ "regex-syntax/unicode-perl" ];
          "unicode-script" = [ "regex-syntax/unicode-script" ];
          "unicode-segment" = [ "regex-syntax/unicode-segment" ];
          "unstable" = [ "pattern" ];
          "use_std" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "aho-corasick" "default" "memchr" "perf" "perf-cache" "perf-dfa" "perf-inline" "perf-literal" "std" "thread_local" "unicode" "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
    "regex-syntax 0.6.12 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "regex-syntax";
        version = "0.6.12";
        edition = "2015";
        sha256 = "05pplicvzvgkb2wb4i98p2mrpgc8gws6vdl8xlpyyr6f3h6y59qi";
        authors = [
          "The Rust Project Developers"
        ];
        features = {
          "default" = [ "unicode" ];
          "unicode" = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
        };
        resolvedDefaultFeatures = [ "unicode-age" "unicode-bool" "unicode-case" "unicode-gencat" "unicode-perl" "unicode-script" "unicode-segment" ];
      };
    "rustc_version 0.2.3 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "rustc_version";
        version = "0.2.3";
        edition = "2015";
        sha256 = "02h3x57lcr8l2pm0a645s9whdh33pn5cnrwvn5cb57vcrc53x3hk";
        authors = [
          "Marvin Löbel <loebel.marvin@gmail.com>"
        ];
        dependencies = [
          {
            name = "semver";
            packageId = "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "ryu 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ryu";
        version = "1.0.2";
        edition = "2015";
        sha256 = "1j0h74f1xqf9hjkhanp8i20mqc1aw35kr1iq9i79q7713mn51a5z";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        features = {
        };
      };
    "scopeguard 1.0.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "scopeguard";
        version = "1.0.0";
        edition = "2015";
        sha256 = "03aay84r1f6w87ckbpj6cc4rnsxkxcfs13n5ynxjia0qkgjiabml";
        authors = [
          "bluss"
        ];
        features = {
          "default" = [ "use_std" ];
        };
      };
    "semver 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "semver";
        version = "0.9.0";
        edition = "2015";
        sha256 = "00q4lkcj0rrgbhviv9sd4p6qmdsipkwkbra7rh11jrhq5kpvjzhx";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
          "The Rust Project Developers"
        ];
        dependencies = [
          {
            name = "semver-parser";
            packageId = "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "ci" = [ "serde" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "semver-parser 0.7.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "semver-parser";
        version = "0.7.0";
        edition = "2015";
        sha256 = "18vhypw6zgccnrlm5ps1pwa0khz7ry927iznpr88b87cagr1v2iq";
        authors = [
          "Steve Klabnik <steve@steveklabnik.com>"
        ];
        features = {
        };
      };
    "serde 1.0.103 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde";
        version = "1.0.103";
        edition = "2015";
        sha256 = "00ip3xy09nk6c2b47ky1m5379yjmwk6n3sr2vmblp478p1xgj5qj";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "serde_derive";
            packageId = "serde_derive 1.0.103 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
        ];
        features = {
          "default" = [ "std" ];
          "derive" = [ "serde_derive" ];
        };
        resolvedDefaultFeatures = [ "default" "derive" "serde_derive" "std" ];
      };
    "serde_derive 1.0.103 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde_derive";
        version = "1.0.103";
        edition = "2015";
        sha256 = "1l2icqq548dmq5bn278zb2vj725znj4h4ms89w3b0r1fkbpzmim8";
        procMacro = true;
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "syn";
            packageId = "syn 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "visit" ];
          }
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "serde_json 1.0.42 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "serde_json";
        version = "1.0.42";
        edition = "2015";
        sha256 = "0hq0x0x0lbjcvfnml2s7zk7s9lca50gkqz5bj8n7w1hzpkf52cqs";
        authors = [
          "Erick Tryzelaar <erick.tryzelaar@gmail.com>"
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "itoa";
            packageId = "itoa 0.4.4 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "ryu";
            packageId = "ryu 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "serde";
            packageId = "serde 1.0.103 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "preserve_order" = [ "indexmap" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "slab 0.4.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "slab";
        version = "0.4.2";
        edition = "2015";
        sha256 = "1y59xsa27jk84sxzswjk60xcjf8b4fm5960jwpznrrcmasyva4f1";
        authors = [
          "Carl Lerche <me@carllerche.com>"
        ];
        features = {
        };
      };
    "smallvec 0.6.13 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "smallvec";
        version = "0.6.13";
        edition = "2015";
        sha256 = "1dl219vnfkmsfx28lm3f83lyw24zap6fdsli6rg8nnp1aa67bc7p";
        libPath = "lib.rs";
        authors = [
          "Simon Sapin <simon.sapin@exyr.org>"
        ];
        dependencies = [
          {
            name = "maybe-uninit";
            packageId = "maybe-uninit 2.0.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "strsim 0.8.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "strsim";
        version = "0.8.0";
        edition = "2015";
        sha256 = "0sjsm7hrvjdifz661pjxq5w4hf190hx53fra8dfvamacvff139cf";
        authors = [
          "Danny Guo <dannyguo91@gmail.com>"
        ];
        features = {
        };
      };
    "structopt 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "structopt";
        version = "0.3.5";
        edition = "2018";
        sha256 = "1gzmlm9zajzwcz2a1xl3cyijkj6fl2hch09kig1m7mas7zls7crh";
        authors = [
          "Guillaume Pinot <texitoi@texitoi.eu>"
          "others"
        ];
        dependencies = [
          {
            name = "clap";
            packageId = "clap 2.33.0 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "structopt-derive";
            packageId = "structopt-derive 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "color" = [ "clap/color" ];
          "debug" = [ "clap/debug" ];
          "default" = [ "clap/default" ];
          "doc" = [ "clap/doc" ];
          "lints" = [ "clap/lints" ];
          "no_cargo" = [ "clap/no_cargo" ];
          "paw" = [ "structopt-derive/paw" ];
          "suggestions" = [ "clap/suggestions" ];
          "wrap_help" = [ "clap/wrap_help" ];
          "yaml" = [ "clap/yaml" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "structopt-derive 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "structopt-derive";
        version = "0.3.5";
        edition = "2018";
        sha256 = "03j1yd8biai9qgzvpvi7wq62pf6lm27sgrwz1alyng2v0102ssga";
        procMacro = true;
        authors = [
          "Guillaume Pinot <texitoi@texitoi.eu>"
        ];
        dependencies = [
          {
            name = "heck";
            packageId = "heck 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "proc-macro-error";
            packageId = "proc-macro-error 0.2.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "quote";
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "syn";
            packageId = "syn 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "full" ];
          }
        ];
        features = {
        };
      };
    "syn 1.0.11 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "syn";
        version = "1.0.11";
        edition = "2018";
        sha256 = "0f4jmp6n02br9hiwf4rcllmmmqxigs47yqbnb5nzxqks43dsrw6z";
        authors = [
          "David Tolnay <dtolnay@gmail.com>"
        ];
        dependencies = [
          {
            name = "proc-macro2";
            packageId = "proc-macro2 1.0.6 (registry+https://github.com/rust-lang/crates.io-index)";
            usesDefaultFeatures = false;
          }
          {
            name = "quote";
            packageId = "quote 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
          }
          {
            name = "unicode-xid";
            packageId = "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "default" = [ "derive" "parsing" "printing" "clone-impls" "proc-macro" ];
          "printing" = [ "quote" ];
          "proc-macro" = [ "proc-macro2/proc-macro" "quote/proc-macro" ];
        };
        resolvedDefaultFeatures = [ "clone-impls" "default" "derive" "full" "parsing" "printing" "proc-macro" "quote" "visit" ];
      };
    "termcolor 1.0.5 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "termcolor";
        version = "1.0.5";
        edition = "2015";
        sha256 = "0vjfsn1a8zvqhnrbygrz1id6yckwv1dncw3w4zj65qdx0f00kmln";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "wincolor";
            packageId = "wincolor 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: target."windows";
          }
        ];
        features = {
        };
      };
    "textwrap 0.11.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "textwrap";
        version = "0.11.0";
        edition = "2015";
        sha256 = "0q5hky03ik3y50s9sz25r438bc4nwhqc6dqwynv4wylc807n29nk";
        authors = [
          "Martin Geisler <martin@geisler.net>"
        ];
        dependencies = [
          {
            name = "unicode-width";
            packageId = "unicode-width 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "thread_local 0.3.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "thread_local";
        version = "0.3.6";
        edition = "2015";
        sha256 = "06rzik99p8c5js8238yhc8rk6np543ylb1dy9nrw5v80j0r3xdf6";
        authors = [
          "Amanieu d'Antras <amanieu@gmail.com>"
        ];
        dependencies = [
          {
            name = "lazy_static";
            packageId = "lazy_static 1.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "unicode-segmentation 1.6.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-segmentation";
        version = "1.6.0";
        edition = "2015";
        sha256 = "1h7d48mzpi8hwf5cvnq07warkv86pvapzzzf32hvbjsk20yiagp8";
        authors = [
          "kwantam <kwantam@gmail.com>"
          "Manish Goregaokar <manishsmail@gmail.com>"
        ];
        features = {
        };
      };
    "unicode-width 0.1.6 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-width";
        version = "0.1.6";
        edition = "2015";
        sha256 = "082f9hv1r3gcd1xl33whjhrm18p0w9i77zhhhkiccb5r47adn1vh";
        authors = [
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
          "rustc-dep-of-std" = [ "std" "core" "compiler_builtins" ];
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "unicode-xid 0.2.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "unicode-xid";
        version = "0.2.0";
        edition = "2015";
        sha256 = "0z09fn515xm7zyr0mmdyxa9mx2f7azcpv74pqmg611iralwpcvl2";
        authors = [
          "erick.tryzelaar <erick.tryzelaar@gmail.com>"
          "kwantam <kwantam@gmail.com>"
        ];
        features = {
        };
        resolvedDefaultFeatures = [ "default" ];
      };
    "vec_map 0.8.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "vec_map";
        version = "0.8.1";
        edition = "2015";
        sha256 = "06n8hw4hlbcz328a3gbpvmy0ma46vg1lc0r5wf55900szf3qdiq5";
        authors = [
          "Alex Crichton <alex@alexcrichton.com>"
          "Jorge Aparicio <japaricious@gmail.com>"
          "Alexis Beingessner <a.beingessner@gmail.com>"
          "Brian Anderson <>"
          "tbu- <>"
          "Manish Goregaokar <>"
          "Aaron Turon <aturon@mozilla.com>"
          "Adolfo Ochagavía <>"
          "Niko Matsakis <>"
          "Steven Fackler <>"
          "Chase Southwood <csouth3@illinois.edu>"
          "Eduard Burtescu <>"
          "Florian Wilkens <>"
          "Félix Raimundo <>"
          "Tibor Benke <>"
          "Markus Siemens <markus@m-siemens.de>"
          "Josh Branchaud <jbranchaud@gmail.com>"
          "Huon Wilson <dbau.pp@gmail.com>"
          "Corey Farwell <coref@rwell.org>"
          "Aaron Liblong <>"
          "Nick Cameron <nrc@ncameron.org>"
          "Patrick Walton <pcwalton@mimiga.net>"
          "Felix S Klock II <>"
          "Andrew Paseltiner <apaseltiner@gmail.com>"
          "Sean McArthur <sean.monstar@gmail.com>"
          "Vadim Petrochenkov <>"
        ];
        features = {
          "eders" = [ "serde" ];
        };
      };
    "void 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "void";
        version = "1.0.2";
        edition = "2015";
        sha256 = "0zc8f0ksxvmhvgx4fdg0zyn6vdnbxd2xv9hfx4nhzg6kbs4f80ka";
        authors = [
          "Jonathan Reem <jonathan.reem@gmail.com>"
        ];
        features = {
          "default" = [ "std" ];
        };
        resolvedDefaultFeatures = [ "default" "std" ];
      };
    "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi";
        version = "0.2.8";
        edition = "2015";
        sha256 = "0yh816lh6lf56dpsgxy189c2ai1z3j8mw9si6izqb6wsjkbcjz8n";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi";
        version = "0.3.8";
        edition = "2015";
        sha256 = "1ii9j9lzrhwri0902652awifzx9fpayimbp6hfhhc296xcg0k4w0";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi-i686-pc-windows-gnu";
            packageId = "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: (stdenv.hostPlatform.config == "i686-pc-windows-gnu");
          }
          {
            name = "winapi-x86_64-pc-windows-gnu";
            packageId = "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: (stdenv.hostPlatform.config == "x86_64-pc-windows-gnu");
          }
        ];
        features = {
          "debug" = [ "impl-debug" ];
        };
        resolvedDefaultFeatures = [ "consoleapi" "errhandlingapi" "fileapi" "handleapi" "minwinbase" "minwindef" "ntstatus" "processenv" "std" "winbase" "wincon" "winerror" "winnt" "winsock2" "ws2def" "ws2ipdef" "ws2tcpip" ];
      };
    "winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-build";
        version = "0.1.1";
        edition = "2015";
        sha256 = "1g4rqsgjky0a7530qajn2bbfcrl2v0zb39idgdws9b1l7gp5wc9d";
        libName = "build";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "winapi-i686-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-i686-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "1dmpa6mvcvzz16zg6d5vrfy4bxgg541wxrcip7cnshi06v38ffxc";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-util";
        version = "0.1.2";
        edition = "2015";
        sha256 = "1j839dc6y8vszvrsb7yk0qvs0w6asnahxzbyans37vnsw6vbls3i";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            target = features: target."windows";
            features = [ "std" "consoleapi" "errhandlingapi" "fileapi" "minwindef" "processenv" "winbase" "wincon" "winerror" "winnt" ];
          }
        ];
        features = {
        };
      };
    "winapi-x86_64-pc-windows-gnu 0.4.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "winapi-x86_64-pc-windows-gnu";
        version = "0.4.0";
        edition = "2015";
        sha256 = "0gqq64czqb64kskjryj8isp62m2sgvx25yyj3kpc2myh85w24bki";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        features = {
        };
      };
    "wincolor 1.0.2 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "wincolor";
        version = "1.0.2";
        edition = "2015";
        sha256 = "1agaf3hcav113i86912ajnw6jxcy4rvkrgyf8gdj8kc031mh3xcn";
        authors = [
          "Andrew Gallant <jamslam@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.3.8 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "minwindef" "wincon" ];
          }
          {
            name = "winapi-util";
            packageId = "winapi-util 0.1.2 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "ws2_32-sys 0.2.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "ws2_32-sys";
        version = "0.2.1";
        edition = "2015";
        sha256 = "0ppscg5qfqaw0gzwv2a4nhn5bn01ff9iwn6ysqnzm4n8s3myz76m";
        libName = "ws2_32";
        authors = [
          "Peter Atashian <retep998@gmail.com>"
        ];
        dependencies = [
          {
            name = "winapi";
            packageId = "winapi 0.2.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        buildDependencies = [
          {
            name = "winapi-build";
            packageId = "winapi-build 0.1.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
        };
      };
    "x11 2.18.1 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "x11";
        version = "2.18.1";
        edition = "2015";
        sha256 = "0dg2d0yrqmwg6prpxkw3vpmwzwxnaki2cn0v64ylh5gp4cqpws9r";
        authors = [
          "daggerbot <daggerbot@gmail.com>"
          "Erle Pereira <erle@erlepereira.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        buildDependencies = [
          {
            name = "pkg-config";
            packageId = "pkg-config 0.3.17 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "xrecord" = [ "xtst" ];
          "xtest" = [ "xtst" ];
        };
        resolvedDefaultFeatures = [ "xlib" ];
      };
    "xcb 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)"
      = rec {
        crateName = "xcb";
        version = "0.9.0";
        edition = "2015";
        sha256 = "19i2pm8alpn2f0m4jg8bsw6ckw8irj1wjh55h9pi2fcb2diny1b2";
        authors = [
          "Remi Thebault <remi.thebault@gmail.com>"
        ];
        dependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "log";
            packageId = "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "x11";
            packageId = "x11 2.18.1 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            features = [ "xlib" ];
          }
        ];
        buildDependencies = [
          {
            name = "libc";
            packageId = "libc 0.2.66 (registry+https://github.com/rust-lang/crates.io-index)";
          }
        ];
        features = {
          "composite" = [ "xfixes" ];
          "damage" = [ "xfixes" ];
          "debug_all" = [ "thread" "composite" "damage" "dpms" "dri2" "dri3" "glx" "randr" "record" "render" "res" "screensaver" "shape" "shm" "xevie" "xf86dri" "xfixes" "xinerama" "xkb" "xprint" "xselinux" "xtest" "xvmc" "xv" "xlib_xcb" ];
          "present" = [ "render" "xfixes" "sync" ];
          "randr" = [ "render" ];
          "xfixes" = [ "render" "shape" ];
          "xinput" = [ "xfixes" ];
          "xlib_xcb" = [ "x11/xlib" ];
          "xv" = [ "shm" ];
          "xvmc" = [ "xv" ];
        };
        resolvedDefaultFeatures = [ "screensaver" "x11" ];
      };
    "xidlehook 0.8.1 (path+file:///home/user/Coding/Rust/xidlehook/xidlehook-daemon)"
      = rec {
        crateName = "xidlehook";
        version = "0.8.1";
        edition = "2018";
        crateBin = [
          { name = "xidlehook"; path = "src/main.rs"; }
          { name = "xidlehook-client"; path = "src/bin/xidlehook-client.rs"; }
        ];
        src = (builtins.filterSource sourceFilter ./xidlehook-daemon);
        authors = [
          "jD91mZM2 <me@krake.one>"
        ];
        dependencies = [
          {
            name = "async-std";
            packageId = "async-std 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "unstable" ];
          }
          {
            name = "env_logger";
            packageId = "env_logger 0.7.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "futures";
            packageId = "futures 0.3.1 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "log";
            packageId = "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "nix";
            packageId = "nix 0.15.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "serde";
            packageId = "serde 1.0.103 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "derive" ];
          }
          {
            name = "serde_json";
            packageId = "serde_json 1.0.42 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "structopt";
            packageId = "structopt 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "xcb";
            packageId = "xcb 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "x11" "screensaver" ];
          }
          {
            name = "xidlehook-core";
            packageId = "xidlehook-core 0.1.0 (path+file:///home/user/Coding/Rust/xidlehook/xidlehook-core)";
            usesDefaultFeatures = false;
            features = [ "async-std" ];
          }
        ];
        features = {
          "default" = [ "pulse" ];
          "pulse" = [ "xidlehook-core/pulse" ];
        };
        resolvedDefaultFeatures = [ "default" "pulse" ];
      };
    "xidlehook-core 0.1.0 (path+file:///home/user/Coding/Rust/xidlehook/xidlehook-core)"
      = rec {
        crateName = "xidlehook-core";
        version = "0.1.0";
        edition = "2018";
        src = (builtins.filterSource sourceFilter ./xidlehook-core);
        authors = [
          "jD91mZM2 <me@krake.one>"
        ];
        dependencies = [
          {
            name = "async-std";
            packageId = "async-std 1.2.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
          }
          {
            name = "libpulse-binding";
            packageId = "libpulse-binding 2.14.0 (registry+https://github.com/rust-lang/crates.io-index)";
            optional = true;
            usesDefaultFeatures = false;
            features = [ "pa_v12_compatibility" ];
          }
          {
            name = "log";
            packageId = "log 0.4.8 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "nix";
            packageId = "nix 0.15.0 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "structopt";
            packageId = "structopt 0.3.5 (registry+https://github.com/rust-lang/crates.io-index)";
          }
          {
            name = "xcb";
            packageId = "xcb 0.9.0 (registry+https://github.com/rust-lang/crates.io-index)";
            features = [ "x11" "screensaver" ];
          }
        ];
        features = {
          "default" = [ "pulse" ];
          "pulse" = [ "libpulse-binding" ];
        };
        resolvedDefaultFeatures = [ "async-std" "default" "libpulse-binding" "pulse" ];
      };
  };

  #
  # crate2nix/default.nix (excerpt start)
  # 

  # Target (platform) data for conditional dependencies.
  # This corresponds roughly to what buildRustCrate is setting.
  target = {
      unix = true;
      windows = false;
      fuchsia = true;
      # We don't support tests yet, so this is true for now.
      test = false;

      # This doesn't appear to be officially documented anywhere yet.
      # See https://github.com/rust-lang-nursery/rust-forge/issues/101.
      os = if stdenv.hostPlatform.isDarwin
        then "macos"
        else stdenv.hostPlatform.parsed.kernel.name;
      arch = stdenv.hostPlatform.parsed.cpu.name;
      family = "unix";
      env = "gnu";
      endian = if stdenv.hostPlatform.parsed.cpu.significantByte.name == "littleEndian" then "little" else "big";
      pointer_width = toString stdenv.hostPlatform.parsed.cpu.bits;
      vendor = stdenv.hostPlatform.parsed.vendor.name;
      debug_assertions = false;
  };

  /* Filters common temp files and build files */
  # TODO(pkolloch): Substitute with gitignore filter
  sourceFilter = name: type:
    let baseName = builtins.baseNameOf (builtins.toString name);
    in ! (
      # Filter out git
      baseName == ".gitignore" ||
      (type == "directory" && baseName == ".git" ) ||

      # Filter out build results
      (type == "directory" && (
        baseName == "target" ||
        baseName == "_site" ||
        baseName == ".sass-cache" ||
        baseName == ".jekyll-metadata" ||
        baseName == "build-artifacts"
        )) ||

      # Filter out nix-build result symlinks
      (type == "symlink" && lib.hasPrefix "result" baseName) ||

      # Filter out IDE config
      (type == "directory" && (
        baseName == ".idea" ||
        baseName == ".vscode"
        )) ||
      lib.hasSuffix ".iml" baseName ||

      # Filter out nix build files
      # lib.hasSuffix ".nix" baseName ||
      baseName == "Cargo.nix" ||

      # Filter out editor backup / swap files.
      lib.hasSuffix "~" baseName ||
      builtins.match "^\\.sw[a-z]$$" baseName != null ||
      builtins.match "^\\..*\\.sw[a-z]$$" baseName != null ||
      lib.hasSuffix ".tmp" baseName ||
      lib.hasSuffix ".bak" baseName ||
      baseName == "tests.nix"
    );

  /* A restricted overridable version of  buildRustCrateWithFeaturesImpl. */
  buildRustCrateWithFeatures = {
        packageId, 
        features ? rootFeatures,
        crateOverrides ? defaultCrateOverrides, 
        buildRustCrateFunc ? buildRustCrate
      }:
    lib.makeOverridable
      ({features, crateOverrides}: 
        let builtRustCrates = builtRustCratesWithFeatures {
          inherit packageId features crateOverrides  buildRustCrateFunc;
        };
        in builtRustCrates.${packageId})
      { inherit features crateOverrides; };

  /* Returns a buildRustCrate derivation for the given packageId and features. */
  builtRustCratesWithFeatures = { 
        crateConfigs? crates, 
        packageId,
        features,
        crateOverrides, 
        buildRustCrateFunc
      } @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);

    let mergedFeatures = mergePackageFeatures args;
        # Memoize built packages so that reappearing packages are only built once.
        builtByPackageId =
          lib.mapAttrs (packageId: value: buildByPackageId packageId) crateConfigs;
        buildByPackageId = packageId:
          let features = mergedFeatures."${packageId}" or [];
              crateConfig = lib.filterAttrs (n: v: n != "resolvedDefaultFeatures") crateConfigs."${packageId}";
              dependencies =
                dependencyDerivations builtByPackageId features (crateConfig.dependencies or []);
              buildDependencies =
                dependencyDerivations builtByPackageId features (crateConfig.buildDependencies or []);
              dependenciesWithRenames =
                lib.filter (d: d ? "rename")
                  (crateConfig.buildDependencies or [] ++ crateConfig.dependencies or []);
              crateRenames =
                builtins.listToAttrs (map (d: { name = d.name; value = d.rename; }) dependenciesWithRenames);
          in buildRustCrateFunc (crateConfig // { 
            src = crateConfig.src or (pkgs.fetchurl {
              name = "${crateConfig.crateName}-${crateConfig.version}.tar.gz";
              url = "https://crates.io/api/v1/crates/${crateConfig.crateName}/${crateConfig.version}/download";
              sha256 = crateConfig.sha256;
            });
            inherit features dependencies buildDependencies crateRenames; 
          });
    in builtByPackageId;

  /* Returns the actual derivations for the given dependencies. */
  dependencyDerivations = builtByPackageId: features: dependencies:
    assert (builtins.isAttrs builtByPackageId);
    assert (builtins.isList features);
    assert (builtins.isList dependencies);

    let enabledDependencies = filterEnabledDependencies dependencies features;
        depDerivation = dependency: builtByPackageId.${dependency.packageId};
    in map depDerivation enabledDependencies;

  sanitizeForJson = val:
          if builtins.isAttrs val
          then lib.mapAttrs (n: v: sanitizeForJson v) val
          else if builtins.isList val
          then builtins.map sanitizeForJson val
          else if builtins.isFunction val
          then "function"
          else val;

  debugCrate = {packageId}:
    assert (builtins.isString packageId);

    rec {
        # The built tree as passed to buildRustCrate.
        buildTree = buildRustCrateWithFeatures {
            buildRustCrateFunc = lib.id;
            inherit packageId;
        };
        sanitizedBuildTree = sanitizeForJson buildTree;
        dependencyTree = sanitizeForJson (buildRustCrateWithFeatures {
            buildRustCrateFunc = crate: {
                "01_crateName" = crate.crateName or false;
                "02_features" = crate.features or [];
                "03_dependencies" = crate.dependencies or [];
            };
            inherit packageId;
        });
        mergedPackageFeatures = mergePackageFeatures { inherit packageId; features = rootFeatures; };
        diffedDefaultPackageFeatures = diffDefaultPackageFeatures { inherit packageId;  features = rootFeatures; };
    };

  /* Returns differences between cargo default features and crate2nix default features.
   *
   * This is useful for verifying the feature resolution in crate2nix.
   */
  diffDefaultPackageFeatures = {crateConfigs ? crates, packageId}:
    assert (builtins.isAttrs crateConfigs);

    let prefixValues = prefix: lib.mapAttrs (n: v: { "${prefix}" = v; });
        mergedFeatures =
          prefixValues
            "crate2nix"
            (mergePackageFeatures {inherit crateConfigs packageId; features = ["default"]; });
        configs = prefixValues "cargo" crateConfigs;
        combined = lib.foldAttrs (a: b: a // b) {} [ mergedFeatures configs ];
        onlyInCargo = builtins.attrNames (lib.filterAttrs (n: v: !(v ? "crate2nix" ) && (v ? "cargo")) combined);
        onlyInCrate2Nix = builtins.attrNames (lib.filterAttrs (n: v: (v ? "crate2nix" ) && !(v ? "cargo")) combined);
        differentFeatures = lib.filterAttrs
          (n: v:
          (v ? "crate2nix" )
          && (v ? "cargo")
          && (v.crate2nix.features or []) != (v."cargo".resolved_default_features or []))
          combined;
    in builtins.toJSON { inherit onlyInCargo onlyInCrate2Nix differentFeatures; };

  /* Returns the feature configuration by package id for the given input crate.

     Returns a { packageId, features } attribute set for every package needed for building the
     package for the given packageId with the given features.

     Returns multiple, potentially conflicting attribute sets for dependencies that are reachable
     by multiple paths in the dependency tree.
  */
  mergePackageFeatures = {
    crateConfigs ? crates,
    packageId,
    features ? rootFeatures,
    dependencyPath? [crates.${packageId}.crateName],
    featuresByPackageId? {},
    ...} @ args:
    assert (builtins.isAttrs crateConfigs);
    assert (builtins.isString packageId);
    assert (builtins.isList features);
    assert (builtins.isAttrs featuresByPackageId);

    let
        crateConfig = crateConfigs."${packageId}" or (builtins.throw "Package not found: ${packageId}");
        expandedFeatures = expandFeatures (crateConfig.features or {}) features;

        depWithResolvedFeatures = dependency:
          let packageId = dependency.packageId;
              features = dependencyFeatures expandedFeatures dependency;
          in { inherit packageId features; };

        resolveDependencies = cache: path: dependencies:
          assert (builtins.isAttrs cache);
          assert (builtins.isList dependencies);

          let enabledDependencies = filterEnabledDependencies dependencies expandedFeatures;
              directDependencies = map depWithResolvedFeatures enabledDependencies;
              foldOverCache = op: lib.foldl op cache directDependencies;
          in foldOverCache
            (cache: {packageId, features}:
             let cacheFeatures = cache.${packageId} or [];
                 combinedFeatures = sortedUnique (cacheFeatures ++ features);
             in
             if cache ? ${packageId} && cache.${packageId} == combinedFeatures
             then cache
             else mergePackageFeatures {
                  # This is purely for debugging.
                  dependencyPath = dependencyPath ++ [path crateConfigs.${packageId}.crateName];
                  features = combinedFeatures;
                  featuresByPackageId = cache;
                  inherit crateConfigs packageId;
                 });

        cacheWithSelf =
            let cacheFeatures = featuresByPackageId.${packageId} or [];
                combinedFeatures = sortedUnique (cacheFeatures ++ expandedFeatures);
            in featuresByPackageId // {
                ${packageId} = combinedFeatures;
            };

        cacheWithDependencies =
            resolveDependencies cacheWithSelf "dep" (crateConfig.dependencies or []);
        cacheWithAll =
            resolveDependencies cacheWithDependencies "build" (crateConfig.buildDependencies or []);

    in cacheWithAll;

  /* Returns the enabled dependencies given the enabled features. */
  filterEnabledDependencies = dependencies: features:
    assert (builtins.isList dependencies);
    assert (builtins.isList features);

    lib.filter
      (dep:
        let targetFunc = dep.target or (features: true);
        in targetFunc features
           && (!(dep.optional or false) || builtins.any (doesFeatureEnableDependency dep.name) features))
      dependencies;

  /* Returns whether the given feature should enable the given dependency. */
  doesFeatureEnableDependency = depName: feature:
    let prefix = "${depName}/";
        len = builtins.stringLength prefix;
        startsWithPrefix = builtins.substring 0 len feature == prefix;
    in feature == depName || startsWithPrefix;

  /* Returns the expanded features for the given inputFeatures by applying the rules in featureMap.

     featureMap is an attribute set which maps feature names to lists of further feature names to enable in case this
     feature is selected.
  */
  expandFeatures = featureMap: inputFeatures:
    assert (builtins.isAttrs featureMap);
    assert (builtins.isList inputFeatures);

    let expandFeature = feature:
          assert (builtins.isString feature);
          [feature] ++ (expandFeatures featureMap (featureMap."${feature}" or []));
        outFeatures = builtins.concatMap expandFeature inputFeatures;
    in sortedUnique outFeatures;

  /*
   * Returns the actual dependencies for the given dependency.
   *
   * features: The features of the crate that refers this dependency.
   */
  dependencyFeatures = features: dependency:
    assert (builtins.isList features);
    assert (builtins.isAttrs dependency);

    let defaultOrNil = if dependency.usesDefaultFeatures or true
                       then ["default"]
                       else [];
        explicitFeatures = dependency.features or [];
        additionalDependencyFeatures =
          let dependencyPrefix = dependency.name+"/";
              dependencyFeatures =
                builtins.filter (f: lib.hasPrefix dependencyPrefix f) features;
          in builtins.map (lib.removePrefix dependencyPrefix) dependencyFeatures;
    in
      defaultOrNil ++ explicitFeatures ++ additionalDependencyFeatures;

  /* Sorts and removes duplicates from a list of strings. */
  sortedUnique = features:
    assert (builtins.isList features);
    assert (builtins.all builtins.isString features);

    let outFeaturesSet = lib.foldl (set: feature: set // {"${feature}" = 1;} ) {} features;
        outFeaturesUnique = builtins.attrNames outFeaturesSet;
    in builtins.sort (a: b: a < b) outFeaturesUnique;

  #
  # crate2nix/default.nix (excerpt end)
  # 

}
